The OOp structur is 

1) Main SuperClass is Database Class from database.py
2) And the Other SuperClass which is being used is Authentication which is in Custom_authentication but it is also the child of database Class

Classes Used right now with the functions i created are as follows with there OOp structue are as follows

1)Database Class which is supperclass of LoginWindow,Home,Flights,Tickets,Authentication

functions in Database class are
  __init__(self)  #Constructor
   Create_database(self)         #to create a Database File
   create_users_table(self)      #to create Users Table in Database
   create_flights_table(self)    #to create Flights Table in Database
   create_passengers_table(self) #to create passangers Table in Database

   Insert_data_passengers(self,different args to insert into databasse)  #to Insert data into Passangers Table
   Insert_data_users (self, different args to insert into databasse)     #to Insert data into users Table
   Insert_data_flights(self, different args to insert into databasse)    #to Insert data into flights Table
   Showdata(self) #it is being use for testing right know 
   Delete_data(self) #it is also being used for testing to delete a record
 
		
2) Authentication(Database) is the Child of Database Class 
	it has two functions as right know which may be increased 
they are as follows 
    __init__(self)  #Constructor 
   check_username_password(self) #to check if the entered Username and password exsist in databasse or Not
   changes may be done as the project moves forward

3) LoginWindow(Database) is The Child of DataBase class LoginWindow class is in login.py 
	it has the gui of login page which is used to login into the managment system

4) in main.py we have 3 classes 
Home (Authentication,Datbase)
Flights(Authentication,Datbase)
Tickets(Authentication,Datbase)
they are the childrent of database class and Authentication 
	

run main.py for testing
	


note:  nothing is permanent anything can be changed until the last date of submission 

